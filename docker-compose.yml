services:
  rabbitmq:
    image: "rabbitmq:3-management"
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "rabbitmqctl", "status"]
      interval: 10s
      timeout: 5s
      retries: 5  
    environment:
      - RABBITMQ_DEFAULT_USER=room2
      - RABBITMQ_DEFAULT_PASS=room2Password
    ports:
      - 15672:15672
      - 5672:5672
    networks:
      - snowpro_net

  postgres:
    image: postgres:16-alpine
    environment:
      POSTGRES_USER: "room2"
      POSTGRES_PASSWORD: "room2Password"
      PGDATA: "/var/lib/postgresql/data/pgdata"
    command: 
      -c "max_connections=200"
      -c "shared_buffers=256MB"
    volumes:
      - snowprodb-data:/var/lib/postgresql/data
    ports:
      - 5432:5432
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U room2 -d postgres"]
      interval: 5s
      timeout: 3s
      retries: 5
    restart: unless-stopped
    networks:
      - snowpro_net

  pgadmin: 
    image: dpage/pgadmin4:9.3
    environment:
      PGADMIN_DEFAULT_EMAIL: "snowpro@room2.com"
      PGADMIN_DEFAULT_PASSWORD: "room2Password"
      PGADMIN_CONFIG_SERVER_MODE: "False"
    volumes:
      - pgadmin-data:/var/lib/pgadmin
    ports:
      - 5050:80
    restart: unless-stopped
    networks:
      - snowpro_net

  auth-service:  
    build:
      context: .
      dockerfile: AuthorizationServiceMain/Dockerfile 
    ports:
      - 8084:8080
    depends_on:
      postgres:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ConnectionStrings__DefaultConnection=Host=postgres;Port=5432;Database=AuthorizationDb;Username=room2;Password=room2Password
      - RabbitMqSettings__Host=rabbitmq
      - RabbitMqSettings__ExchangeName=user-events
      - RabbitMqSettings__QueueName=user-service-queue
      - RabbitMqSettings__Username=room2
      - RabbitMqSettings__Password=room2Password
    restart: unless-stopped
    networks:
      - snowpro_net

  lesson-service:  
    build:
      context: .
      dockerfile: LessonService/Dockerfile 
    ports:
      - 8085:8080
    depends_on:
      postgres:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy                     
    environment:
      - Logging__LogLevel__Default=Warning
      - ASPNETCORE_ENVIRONMENT=Development
      - ConnectionStrings__DefaultConnection=Host=postgres;Port=5432;Database=LessonsDb;Username=room2;Password=room2Password
      - RabbitMqSettings__Host=rabbitmq
      - RabbitMqSettings__ExchangeName=user-events
      - RabbitMqSettings__QueueName=lesson-service-queue
      - RabbitMqSettings__Username=room2
      - RabbitMqSettings__Password=room2Password
      - Serilog__MinimumLevel=Debug
      - Serilog__WriteTo__0__Name=Console
      - Serilog__WriteTo__1__Name=File
      - Serilog__WriteTo__1__Args__path=/app/logs/lesson-service-log.txt
      - Serilog__WriteTo__1__Args__rollingInterval=Day
    volumes:
      - ./logs:/app/logs
    restart: unless-stopped
    networks:
      - snowpro_net

  profile-service:  
    build:
      context: .
      dockerfile: ProfileService/Dockerfile 
    ports:
      - 8086:8080
    depends_on:
      postgres:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ConnectionString=Host=postgres;Port=5432;Database=ProfileServiceDB;Username=room2;Password=room2Password
      - RabbitMqSettings__Host=rabbitmq
      - RabbitMqSettings__ExchangeName=user-events
      - RabbitMqSettings__QueueName=lesson-service-queue
      - RabbitMqSettings__Username=room2
      - RabbitMqSettings__Password=room2Password
    restart: unless-stopped
    networks:
      - snowpro_net

  notification-broker-service:  
    build:
      context: .
      dockerfile: NotificationBroker/Dockerfile 
    depends_on:
      postgres:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - RabbitMqSettings__Host=rabbitmq
      - RabbitMqSettings__ExchangeName=user-events
      - RabbitMqSettings__QueueName=notification-service-queue
      - RabbitMqSettings__Username=room2
      - RabbitMqSettings__Password=room2Password
    restart: unless-stopped
    networks:
      - snowpro_net

  email-sender-service:  
    build:
      context: .
      dockerfile: NotificationSender/NotificationEmailSender/Dockerfile 
    depends_on:
      postgres:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - RabbitMqSettings__Host=rabbitmq
      - RabbitMqSettings__ExchangeName=user-events
      - RabbitMqSettings__QueueName=email-exchange
      - RabbitMqSettings__Username=room2
      - RabbitMqSettings__Password=room2Password
    restart: unless-stopped
    networks:
      - snowpro_net

  sms-sender-service:  
    build:
      context: .
      dockerfile: NotificationSender/NotificationSmsSender/Dockerfile 
    depends_on:
      postgres:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - RabbitMqSettings__Host=rabbitmq
      - RabbitMqSettings__ExchangeName=user-events
      - RabbitMqSettings__QueueName=sms-exchange
      - RabbitMqSettings__Username=room2
      - RabbitMqSettings__Password=room2Password
    restart: unless-stopped
    networks:
      - snowpro_net

  telegram-sender-service:  
    build:
      context: .
      dockerfile: NotificationSender/NotificationTelegramSender/Dockerfile 
    depends_on:
      postgres:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - RabbitMqSettings__Host=rabbitmq
      - RabbitMqSettings__ExchangeName=user-events
      - RabbitMqSettings__QueueName=telegram-exchange
      - RabbitMqSettings__Username=room2
      - RabbitMqSettings__Password=room2Password
    restart: unless-stopped
    networks:
      - snowpro_net

  frontend:
    build:
      context: .
      dockerfile: SnowPro.WebUI/Dockerfile
    ports:
      - "3000:80"
    restart: always

volumes:
  snowprodb-data:
  pgadmin-data:
  pgdata:

networks:
  snowpro_net:      
    driver: bridge